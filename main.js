(()=>{"use strict";const t=(()=>{const t=document.querySelector(".modal-guts"),e=document.querySelector("#modal"),o=document.querySelector("#modal-overlay");return{projectHTML:e=>{let o=e?"<h1>Edit Project</h1>":"<h1>New Project</h1>",i=e?`data-id="${e.id}" id="modal-form"`:'id="modal-form"',n=e?`value="${e.name}"`:"",d=e?`${e.description}`:"";t.innerHTML=`\n      ${o}\n      <form ${i}>\n        <div class="form-row">\n          <label for="project-title">Title:</label>\n        </div>\n        <div class="form-row">\n          <input type="text" id="project-title" name="project-title" ${n} required />\n        </div>\n        <div class="form-row">\n          <label for="project-description">Description</label>\n        </div>\n        <div class="form-row">\n          <textarea id="project-description" name="project-description" required>${d}</textarea>\n        </div>\n        <div class="form-row bottom">\n          <button type="button">Delete</button>\n          <button type="submit">Submit</button>\n        </div>\n      </form>\n    `},toggle:()=>{e.classList.toggle("closed"),o.classList.toggle("closed")},taskHTML:e=>{let o=e?`<input type="text" id="title" name="title" value="${e.title}">`:'<input type="text" id="title" name="title">',i=e?`<input type="date" id="date" name="date" value="${e.dueDate}">`:'<input type="date" id="date" name="date">',n=e?`\n    <div class="radio-toolbar">\n      <input type="radio" id="radio1" name="radios" value="#F5D346" ${"#F5D346"==e.priority?"checked":""}>\n      <label for="radio1">Low</label>\n      <input type="radio" id="radio2" name="radios" value="#D98121" ${"#D98121"==e.priority?"checked":""}>\n      <label for="radio2">Medium</label>\n      <input type="radio" id="radio3" name="radios" value="#D3151C" ${"#D3151C"==e.priority?"checked":""}>\n      <label for="radio3">High</label>\n    </div>\n    `:'\n    <div class="radio-toolbar">\n      <input type="radio" id="radio1" name="radios" value="#F5D346" checked>\n      <label for="radio1">Low</label>\n      <input type="radio" id="radio2" name="radios" value="#D98121">\n      <label for="radio2">Medium</label>\n      <input type="radio" id="radio3" name="radios" value="#D3151C">\n      <label for="radio3">High</label>\n    </div>\n    ',d=e?`<textarea id="description" name="description">${e.description}</textarea>`:'<textarea id="description" name="description"></textarea>';t.innerHTML=`\n    <h1>${e?"Edit Task":"New Task"}</h1>\n    <form data-id="${e?e.id:""}" id="modal-form">\n      <div class="form-row">\n        <label for="title">Title:</label>\n        ${o}\n        <label for="due-date">Due Date:</label>\n        ${i}\n      </div>\n      <div class="form-row">\n        <label>Difficulty</label>\n      </div>\n      <div class="form-row">\n      ${n}\n      </div>\n        <div class="form-row">\n          <label for="description">Description</label>\n        </div>\n        <div class="form-row">\n          ${d}\n        </div>\n        <div class="form-row bottom">\n          <button type="button">Delete</button>\n          <button type="submit">Submit</button>\n        </div>\n    </form>\n    `}}})(),e=(()=>{const t=document.getElementById("dynamic-projects");return{renderProjects:e=>{e.forEach((e=>{t.innerHTML+=`<h2 data-id='${e.id}' class="project project-name">${e.name}</h2>`}))},clearProjects:()=>{t.innerHTML=""},setBackground:t=>{Array.from(document.getElementsByClassName("project")).forEach((e=>{e.getAttribute("data-id")==t?e.style.backgroundColor="#444a4d":e.style.backgroundColor="transparent"}))},updateProjectNames:(t,e)=>{const o=document.getElementsByClassName("project-name");for(let i=0;i<o.length;i++)if(o[i].getAttribute("data-id")==t)return void(o[i].innerText=e.name)}}})(),o=(()=>{const t=document.getElementById("task-grouping");return{clear:()=>{t.innerHTML=""},render:e=>{e.length?e.forEach((e=>{var o;t.innerHTML+=`\n    <div data-id="${(o=e).id}" class="task-item">\n      <div class="task accordian">\n  \n        <div style="background-color:${o.priority}"id="priority-style"></div>\n        <input type="checkbox" class="todo-completed" ${1==o.complete?"checked":""}>\n        <h2 class="title">${o.title}</h2>\n        <h2 class="date">In X days</h2>\n  \n      </div>\n      <div class="task-full inactive">\n        <div class="description-top">\n          <h3>Description:</h3>\n          <h3>10/20/20</h3>\n          <i data-id="${o.id}" class="fas fa-ellipsis-v task-edit"></i>\n        </div>\n        <p>${o.description}</p>\n      </div>\n    </div>\n    `})):console.log("no tasks yet")},renderAll:t=>{t.forEach((t=>{o.render(t.todoList)}))}}})(),i=t=>{const e=document.getElementById("active-title"),o=document.getElementById("active-description");e.innerHTML=t.name,o.innerHTML=t.description};var n,d=new Uint8Array(16);function r(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(d)}const a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,s=function(t){return"string"==typeof t&&a.test(t)};for(var l=[],c=0;c<256;++c)l.push((c+256).toString(16).substr(1));const u=function(t,e,o){var i=(t=t||{}).random||(t.rng||r)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,e){o=o||0;for(var n=0;n<16;++n)e[o+n]=i[n];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(l[t[e+0]]+l[t[e+1]]+l[t[e+2]]+l[t[e+3]]+"-"+l[t[e+4]]+l[t[e+5]]+"-"+l[t[e+6]]+l[t[e+7]]+"-"+l[t[e+8]]+l[t[e+9]]+"-"+l[t[e+10]]+l[t[e+11]]+l[t[e+12]]+l[t[e+13]]+l[t[e+14]]+l[t[e+15]]).toLowerCase();if(!s(o))throw TypeError("Stringified UUID is invalid");return o}(i)};function p(t,e){this.id=u(),this.name=t,this.description=e,this.active=!1,this.todoList=[]}function m(t,e,o,i){this.id=u(),this.title=t,this.description=e,this.priority=o,this.complete=!1,this.dueDate=i}p.prototype.addTodo=function(t){this.todoList.push(t)},p.prototype.toggleActive=function(){this.active=!this.active},p.prototype.deleteTodoItem=function(t){const e=this.todoList.findIndex((e=>e.id==t));this.todoList.splice(e,1)},p.prototype.getTodoItem=function(t){return this.todoList.find((e=>e.id==t))};const v=(()=>{if(localStorage.length){const t=[];return JSON.parse(localStorage.getItem("user")).forEach((e=>{const o=Object.assign(new p,e);o.active=!1,t.push(o)})),t}return[]})(),g=(()=>{const t=t=>t.find((t=>1==t.active));return{addNewProject:(t,e,o)=>{const i=new p(t,e);o.push(i)},setToActive:(t,e)=>{e.forEach((e=>e.id==t?e.active=!0:e.active=!1))},editProject:(t,e)=>{const o=e.findIndex((e=>e.id==t.id));e[o].name=t.name,e[o].description=t.description},getActiveProj:t,getActiveIndex:t=>t.findIndex((t=>1==t.active)),addNewTask:(t,e,o,i,n)=>{const d=new m(t,e,o,i);n.forEach((t=>{1==t.active&&t.addTodo(d)}))},save:t=>{localStorage.setItem("user",JSON.stringify(t))},getTask:(e,o)=>{const i=t(o);if(i)return i.todoList.find((t=>t.id==e));for(let t=0;t<o.length;t++)for(let i=0;i<o[t].todoList.length;i++)if(o[t].todoList[i].id==e)return o[t].todoList[i]},allToInactive:t=>{t.forEach((t=>t.active=!1))},editTask:(e,o,i)=>{const n=t(i);if(n){const t=n.todoList.findIndex((t=>t.id==e));n.todoList[t].title=o.title,n.todoList[t].dueDate=o.dueDate,n.todoList[t].priority=o.priority,n.todoList[t].description=o.description}else for(let t=0;t<i.length;t++)for(let n=0;n<i[t].todoList.length;n++)i[t].todoList[n].id==e&&(i[t].todoList[n].title=o.title,i[t].todoList[n].dueDate=o.dueDate,i[t].todoList[n].priority=o.priority,i[t].todoList[n].description=o.description)}}})(),f=(()=>{const n=document.querySelector("#close-button"),d=document.getElementById("new-project"),r=document.getElementById("new-task"),a=document.getElementById("edit-project");return{modalClose:()=>{n.addEventListener("click",(function(){t.toggle()}))},newProject:()=>{d.addEventListener("click",(()=>{t.projectHTML(void 0),(()=>{const o=document.getElementById("modal-form");o.addEventListener("submit",(i=>{i.preventDefault(),g.addNewProject(o["project-title"].value,o["project-description"].value,v),e.clearProjects(),e.renderProjects(v),y.projectNames(),g.save(v),t.toggle()}))})(),t.toggle()}))},newTask:()=>{r.addEventListener("click",(()=>{t.taskHTML(),(()=>{const e=document.getElementById("modal-form");e.addEventListener("submit",(i=>{i.preventDefault();const n={title:e.title.value,dueDate:e.date.value,priority:e.radios.value,description:e.description.value};g.addNewTask(n.title,n.description,n.priority,n.dueDate,v);const d=g.getActiveProj(v);o.clear(),o.render(d.todoList),y.editTaskBtns(),y.expandedTodo(),y.todoCheckBoxes(),g.save(v),t.toggle()}))})(),t.toggle()}))},allBtn:t=>{document.getElementById("all-projects").addEventListener("click",(n=>{g.allToInactive(t),o.clear(),o.renderAll(t),console.log("allBtn() ",t),i({name:"All",description:"Viewing all projects"}),e.setBackground(n.target.getAttribute("data-id")),y.editTaskBtns(),y.expandedTodo(),y.todoCheckBoxes()}))},editProject:()=>{a.addEventListener("click",(()=>{console.log("lets edit the project");const o=g.getActiveProj(v);t.projectHTML(o),(()=>{const o=document.getElementById("modal-form");o.addEventListener("submit",(n=>{n.preventDefault();let d={id:n.target.dataset.id,name:o["project-title"].value,description:o["project-description"].value};g.editProject(d,v);const r=g.getActiveProj(v);i(r),e.updateProjectNames(d.id,r),g.save(v),t.toggle()}))})(),t.toggle()}))},editTaskSubmit:()=>{const e=document.getElementById("modal-form");e.addEventListener("submit",(i=>{i.preventDefault();const n={id:i.target.dataset.id,title:e.title.value,dueDate:e.date.value,priority:e.radios.value,description:e.description.value};g.editTask(n.id,n,v);const d=g.getActiveProj(v);o.clear(),d?o.render(d.todoList):o.renderAll(v),y.editTaskBtns(),y.expandedTodo(),y.todoCheckBoxes(),g.save(v),t.toggle()}))}}})(),y={todoCheckBoxes:()=>{Array.from(document.getElementsByClassName("todo-completed")).forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.parentElement.parentElement.getAttribute("data-id");console.log("todoCheckBoxes",e)}))}))},expandedTodo:()=>{Array.from(document.getElementsByClassName("accordian")).forEach((t=>{t.addEventListener("click",(e=>{"todo-completed"!=e.target.className&&t.nextElementSibling.classList.toggle("inactive")}))}))},editTaskBtns:()=>{Array.from(document.getElementsByClassName("task-edit")).forEach((e=>{e.addEventListener("click",(()=>{let o=g.getTask(e.getAttribute("data-id"),v);t.taskHTML(o),f.editTaskSubmit(),t.toggle()}))}))},projectNames:()=>{Array.from(document.getElementsByClassName("project-name")).forEach((t=>{t.addEventListener("click",(t=>{const n=t.target.getAttribute("data-id");g.setToActive(n,v);const d=g.getActiveProj(v);i(d),o.clear(),o.render(d.todoList),e.setBackground(n),y.editTaskBtns(),y.expandedTodo(),y.todoCheckBoxes()}))}))}};f.modalClose(),f.newProject(),f.newTask(),f.editProject(),localStorage.length?(f.allBtn(v),v.sort(((t,e)=>t.name.localeCompare(e.name))),e.renderProjects(v),y.projectNames(),o.clear(),o.renderAll(v),y.editTaskBtns(),y.expandedTodo(),y.todoCheckBoxes()):console.log("no data found")})();