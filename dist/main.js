(()=>{"use strict";var e=6e4;function t(t){return t.getTime()%e}function o(o){var n=new Date(o.getTime()),i=Math.ceil(n.getTimezoneOffset());n.setSeconds(0,0);var r=i>0?(e+t(n))%e:t(n);return i*e+r}function n(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function i(e){n(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function r(e){n(1,arguments);var t=i(e);return t.setHours(0,0,0,0),t}var d=864e5;function a(e,t){n(2,arguments);var i=r(e),a=r(t),s=i.getTime()-o(i),l=a.getTime()-o(a);return Math.round((s-l)/d)}function s(e,t){n(2,arguments);var o=i(e),r=i(t),d=o.getTime()-r.getTime();return d<0?-1:d>0?1:d}const l=(()=>{const e=document.querySelector(".modal-guts"),t=document.querySelector("#modal"),o=document.querySelector("#modal-overlay");return{projectHTML:t=>{let o=t?"<h1>Edit Project</h1>":"<h1>New Project</h1>",n=t?`data-id="${t.id}" id="modal-form"`:'id="modal-form"',i=t?`value="${t.name}"`:"",r=t?`${t.description}`:"";e.innerHTML=`\n      ${o}\n      <form ${n}>\n        <div class="form-row">\n          <label for="project-title">Title:</label>\n        </div>\n        <div class="form-row">\n          <input type="text" id="project-title" name="project-title" ${i} required />\n        </div>\n        <div class="form-row">\n          <label for="project-description">Description</label>\n        </div>\n        <div class="form-row">\n          <textarea id="project-description" name="project-description" required>${r}</textarea>\n        </div>\n        <div class="form-row bottom">\n          <button type="button">Delete</button>\n          <button type="submit">Submit</button>\n        </div>\n      </form>\n    `},toggle:()=>{t.classList.toggle("closed"),o.classList.toggle("closed")},taskHTML:t=>{let o=t?`<input type="text" id="title" name="title" value="${t.title}">`:'<input type="text" id="title" name="title">',n=t?`<input type="date" id="date" name="date" value="${t.dueDate}">`:'<input type="date" id="date" name="date">',i=t?`\n    <div class="radio-toolbar">\n      <input type="radio" id="radio1" name="radios" value="#F5D346" ${"#F5D346"==t.priority?"checked":""}>\n      <label for="radio1">Low</label>\n      <input type="radio" id="radio2" name="radios" value="#D98121" ${"#D98121"==t.priority?"checked":""}>\n      <label for="radio2">Medium</label>\n      <input type="radio" id="radio3" name="radios" value="#D3151C" ${"#D3151C"==t.priority?"checked":""}>\n      <label for="radio3">High</label>\n    </div>\n    `:'\n    <div class="radio-toolbar">\n      <input type="radio" id="radio1" name="radios" value="#F5D346" checked>\n      <label for="radio1">Low</label>\n      <input type="radio" id="radio2" name="radios" value="#D98121">\n      <label for="radio2">Medium</label>\n      <input type="radio" id="radio3" name="radios" value="#D3151C">\n      <label for="radio3">High</label>\n    </div>\n    ',r=t?`<textarea id="description" name="description">${t.description}</textarea>`:'<textarea id="description" name="description"></textarea>';e.innerHTML=`\n    <h1>${t?"Edit Task":"New Task"}</h1>\n    <form data-id="${t?t.id:""}" id="modal-form">\n      <div class="form-row">\n        <label for="title">Title:</label>\n        ${o}\n        <label for="due-date">Due Date:</label>\n        ${n}\n      </div>\n      <div class="form-row">\n        <label>Difficulty</label>\n      </div>\n      <div class="form-row">\n      ${i}\n      </div>\n        <div class="form-row">\n          <label for="description">Description</label>\n        </div>\n        <div class="form-row">\n          ${r}\n        </div>\n        <div class="form-row bottom">\n          <button type="button">Delete</button>\n          <button type="submit">Submit</button>\n        </div>\n    </form>\n    `}}})(),c=(()=>{const e=document.getElementById("dynamic-projects");return{renderProjects:t=>{t.forEach((t=>{e.innerHTML+=`<h2 data-id='${t.id}' class="project project-name">${t.name}</h2>`}))},clearProjects:()=>{e.innerHTML=""},setBackground:e=>{Array.from(document.getElementsByClassName("project")).forEach((t=>{t.getAttribute("data-id")==e?t.style.backgroundColor="#444a4d":t.style.backgroundColor="transparent"}))},updateProjectNames:(e,t)=>{const o=document.getElementsByClassName("project-name");for(let n=0;n<o.length;n++)if(o[n].getAttribute("data-id")==e)return void(o[n].innerText=t.name)}}})(),u=(()=>{const e=document.getElementById("task-grouping");return{clear:()=>{e.innerHTML=""},render:t=>{"underline sort-button"==document.getElementsByClassName("sort-button")[0].classList.value&&console.log("sort by due date"),t.sort(((e,t)=>e.complete-t.complete)),t.length?t.forEach((t=>{e.innerHTML+=(e=>{console.log("taskHTML 180, dueDate = ",e.dueDate);const t=(e=>{const t=new Date(e.substring(0,4),Number(e.substring(5,7))-1,e.substring(8,10));return console.log(typeof t),t})(e.dueDate),o=(e=>{const t=new Date;let o;if(-1==s(e,t)){let n=a(t,e);o=1==n?"1 day past":`${n} days past`}else if(1==s(e,t)){let n=a(e,t);o=1==n?"In 1 day":`In ${n} days`}return o})(t);return`\n    <div data-id="${e.id}" class="task-item">\n      <div class="task accordian ${1==e.complete?"completed":""}">\n  \n        <div style="background-color:${e.priority}; "id="priority-style"></div>\n        <input type="checkbox" class="todo-completed" ${1==e.complete?"checked":""}>\n        <h2 class="title">${e.title}</h2>\n        <h2 class="date">${o}</h2>\n  \n      </div>\n      <div class="task-full inactive">\n        <div class="description-top">\n          <h3>Description:</h3>\n          <h3>${t.toDateString()}</h3>\n          <i data-id="${e.id}" class="fas fa-ellipsis-v task-edit"></i>\n        </div>\n        <p>${e.description}</p>\n      </div>\n    </div>\n    `})(t)})):console.log("no tasks yet")},renderAll:e=>{let t=[];e.forEach((e=>{e.todoList.forEach((e=>{t.push(e)}))})),u.render(t)}}})(),m=e=>{const t=document.getElementById("active-title"),o=document.getElementById("active-description");t.innerHTML=e.name,o.innerHTML=e.description},p=()=>{const e=document.getElementById("due-date");document.getElementById("difficulty").classList.toggle("underline"),e.classList.toggle("underline")};var g,f=new Uint8Array(16);function v(){if(!g&&!(g="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return g(f)}const y=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,h=function(e){return"string"==typeof e&&y.test(e)};for(var b=[],L=0;L<256;++L)b.push((L+256).toString(16).substr(1));const k=function(e,t,o){var n=(e=e||{}).random||(e.rng||v)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){o=o||0;for(var i=0;i<16;++i)t[o+i]=n[i];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(b[e[t+0]]+b[e[t+1]]+b[e[t+2]]+b[e[t+3]]+"-"+b[e[t+4]]+b[e[t+5]]+"-"+b[e[t+6]]+b[e[t+7]]+"-"+b[e[t+8]]+b[e[t+9]]+"-"+b[e[t+10]]+b[e[t+11]]+b[e[t+12]]+b[e[t+13]]+b[e[t+14]]+b[e[t+15]]).toLowerCase();if(!h(o))throw TypeError("Stringified UUID is invalid");return o}(n)};function T(e,t){this.id=k(),this.name=e,this.description=t,this.active=!1,this.todoList=[]}function E(e,t,o,n){this.id=k(),this.title=e,this.description=t,this.priority=o,this.complete=!1,this.dueDate=n}T.prototype.addTodo=function(e){this.todoList.push(e)},T.prototype.toggleActive=function(){this.active=!this.active},T.prototype.deleteTodoItem=function(e){const t=this.todoList.findIndex((t=>t.id==e));this.todoList.splice(t,1)},T.prototype.getTodoItem=function(e){return this.todoList.find((t=>t.id==e))};const j=(()=>{if(localStorage.length){const e=[];return JSON.parse(localStorage.getItem("user")).forEach((t=>{const o=Object.assign(new T,t);o.active=!1,e.push(o)})),e}return[]})(),w=(()=>{const e=e=>e.find((e=>1==e.active));return{addNewProject:(e,t,o)=>{const n=new T(e,t);o.push(n)},setToActive:(e,t)=>{t.forEach((t=>t.id==e?t.active=!0:t.active=!1))},editProject:(e,t)=>{const o=t.findIndex((t=>t.id==e.id));t[o].name=e.name,t[o].description=e.description},getActiveProj:e,getActiveIndex:e=>e.findIndex((e=>1==e.active)),addNewTask:(e,t,o,n,i)=>{const r=new E(e,t,o,n);i.forEach((e=>{1==e.active&&e.addTodo(r)}))},save:e=>{localStorage.setItem("user",JSON.stringify(e))},getTask:(t,o)=>{const n=e(o);if(n)return n.todoList.find((e=>e.id==t));for(let e=0;e<o.length;e++)for(let n=0;n<o[e].todoList.length;n++)if(o[e].todoList[n].id==t)return o[e].todoList[n]},allToInactive:e=>{e.forEach((e=>e.active=!1))},editTask:(t,o,n)=>{const i=e(n);if(i){const e=i.todoList.findIndex((e=>e.id==t));i.todoList[e].title=o.title,i.todoList[e].dueDate=o.dueDate,i.todoList[e].priority=o.priority,i.todoList[e].description=o.description}else for(let e=0;e<n.length;e++)for(let i=0;i<n[e].todoList.length;i++)n[e].todoList[i].id==t&&(n[e].todoList[i].title=o.title,n[e].todoList[i].dueDate=o.dueDate,n[e].todoList[i].priority=o.priority,n[e].todoList[i].description=o.description)},toggleTask:(t,o)=>{const n=e(o);if(n){const e=n.todoList.findIndex((e=>e.id==t));n.todoList[e].complete=!n.todoList[e].complete}else for(let e=0;e<o.length;e++)for(let n=0;n<o[e].todoList.length;n++)o[e].todoList[n].id==t&&(o[e].todoList[n].complete=!o[e].todoList[n].complete)}}})(),D=(()=>{const e=document.querySelector("#close-button"),t=document.getElementById("new-project"),o=document.getElementById("new-task"),n=document.getElementById("edit-project"),i=document.getElementById("due-date"),r=document.getElementById("difficulty");return{modalClose:()=>{e.addEventListener("click",(function(){l.toggle()}))},newProject:()=>{t.addEventListener("click",(()=>{l.projectHTML(void 0),(()=>{const e=document.getElementById("modal-form");e.addEventListener("submit",(t=>{t.preventDefault(),w.addNewProject(e["project-title"].value,e["project-description"].value,j),c.clearProjects(),c.renderProjects(j),B.projectNames(),w.save(j),l.toggle()}))})(),l.toggle()}))},newTask:()=>{o.addEventListener("click",(()=>{l.taskHTML(),(()=>{const e=document.getElementById("modal-form");e.addEventListener("submit",(t=>{t.preventDefault();const o={title:e.title.value,dueDate:e.date.value,priority:e.radios.value,description:e.description.value};w.addNewTask(o.title,o.description,o.priority,o.dueDate,j);const n=w.getActiveProj(j);u.clear(),u.render(n.todoList),B.editTaskBtns(),B.expandedTodo(),B.todoCheckBoxes(),w.save(j),l.toggle()}))})(),l.toggle()}))},allBtn:e=>{document.getElementById("all-projects").addEventListener("click",(t=>{w.allToInactive(e),u.clear(),u.renderAll(e),m({name:"All",description:"Viewing all projects"}),c.setBackground(t.target.dataset.id),B.editTaskBtns(),B.expandedTodo(),B.todoCheckBoxes()}))},editProject:()=>{n.addEventListener("click",(()=>{const e=w.getActiveProj(j);l.projectHTML(e),(()=>{const e=document.getElementById("modal-form");e.addEventListener("submit",(t=>{t.preventDefault();let o={id:t.target.dataset.id,name:e["project-title"].value,description:e["project-description"].value};w.editProject(o,j);const n=w.getActiveProj(j);m(n),c.updateProjectNames(o.id,n),w.save(j),l.toggle()}))})(),l.toggle()}))},editTaskSubmit:()=>{const e=document.getElementById("modal-form");e.addEventListener("submit",(t=>{t.preventDefault();const o={id:t.target.dataset.id,title:e.title.value,dueDate:e.date.value,priority:e.radios.value,description:e.description.value};w.editTask(o.id,o,j);const n=w.getActiveProj(j);u.clear(),n?u.render(n.todoList):u.renderAll(j),B.editTaskBtns(),B.expandedTodo(),B.todoCheckBoxes(),w.save(j),l.toggle()}))},dueDateSort:()=>{i.addEventListener("click",(()=>{p()}))},difficultySort:()=>{r.addEventListener("click",(()=>{p()}))}}})(),B={todoCheckBoxes:()=>{Array.from(document.getElementsByClassName("todo-completed")).forEach((e=>{e.addEventListener("click",(e=>{e.target.parentElement.classList.toggle("completed");const t=e.target.parentElement.parentElement.dataset.id;w.toggleTask(t,j),w.save(j)}))}))},expandedTodo:()=>{Array.from(document.getElementsByClassName("accordian")).forEach((e=>{e.addEventListener("click",(t=>{"todo-completed"!=t.target.className&&e.nextElementSibling.classList.toggle("inactive")}))}))},editTaskBtns:()=>{Array.from(document.getElementsByClassName("task-edit")).forEach((e=>{e.addEventListener("click",(()=>{let t=w.getTask(e.getAttribute("data-id"),j);l.taskHTML(t),D.editTaskSubmit(),l.toggle()}))}))},projectNames:()=>{Array.from(document.getElementsByClassName("project-name")).forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.getAttribute("data-id");w.setToActive(t,j);const o=w.getActiveProj(j);m(o),u.clear(),u.render(o.todoList),c.setBackground(t),B.editTaskBtns(),B.expandedTodo(),B.todoCheckBoxes()}))}))}};D.modalClose(),D.newProject(),D.newTask(),D.editProject(),D.dueDateSort(),D.difficultySort(),localStorage.length?(D.allBtn(j),console.log(j),j.sort(((e,t)=>e.name.localeCompare(t.name))),c.renderProjects(j),B.projectNames(),u.clear(),u.renderAll(j),B.editTaskBtns(),B.expandedTodo(),B.todoCheckBoxes()):console.log("no data found")})();